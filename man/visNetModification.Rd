% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mod_visModification.R
\name{visNetId}
\alias{visNetId}
\alias{vizNetId}
\alias{maximise_helper}
\alias{maximize_helper}
\alias{visNetModification}
\alias{mod_visNetModification_ui}
\alias{mod_visNetModification_server}
\title{visNetworkWrite UI Function}
\usage{
visNetId(id)

vizNetId(id)

maximise_helper(id, offset = 180)

maximize_helper(id, offset = 180)

mod_visNetModification_ui(id, useJQ = F, dev = F)

mod_visNetModification_server(
  id,
  igraphObj,
  dev = F,
  hard_delete = T,
  NodeAttrTooltip = T,
  EdgeAttrTooltip = T,
  domain = getDefaultReactiveDomain(),
  visNet_options = NULL,
  layout = "layout_nicely"
)
}
\arguments{
\item{id}{shiny server id}

\item{offset}{number of pixel to off set when use maixmize button}

\item{dev}{open a printer}

\item{igraphObj}{a reactive graph object}

\item{hard_delete}{when this flag is turn off, no edge can be actually deleted/}

\item{NodeAttrTooltip, EdgeAttrTooltip}{when these two flag are set to ture
attributes will be automatically parsed into tooltips, following formula
'attrName: attr'. There is no good parsing for time series type.}

\item{domain}{session}

\item{visNet_options}{list of option passed to `visSetOptions`}

\item{layout}{igraph layout to put in `visNetwork::visIgraphLayout`}
}
\value{
reactiveValues $Curent and $Main and more
}
\description{
A shiny Module.
}
\details{
$Current is a reactive igraph Object that every is being modified now
$Main is the igraph Object that has been committed and saved
In addition it return a set of `reactiveValues` which monitor graph changes
and track node that is currently clicked.

Two utility function are added `maximize_helper` return a javascript allow you
to resize monitored object to full size. You can use this script on any shiny
widget (where you know id), when you use `bs4Dash::box`

To resize this network specifically add this script below `bs4Dash::box`
`tags$script(maximize_helper(visNetId('<id>')))`
}
