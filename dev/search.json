[{"path":[]},{"path":"https://fzliangfrank.github.io/networkUtils/dev/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://fzliangfrank.github.io/networkUtils/dev/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://fzliangfrank.github.io/networkUtils/dev/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://fzliangfrank.github.io/networkUtils/dev/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://fzliangfrank.github.io/networkUtils/dev/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement Golem User. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://fzliangfrank.github.io/networkUtils/dev/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://fzliangfrank.github.io/networkUtils/dev/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://fzliangfrank.github.io/networkUtils/dev/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://fzliangfrank.github.io/networkUtils/dev/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://fzliangfrank.github.io/networkUtils/dev/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://fzliangfrank.github.io/networkUtils/dev/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://fzliangfrank.github.io/networkUtils/dev/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 Fanzhou Liang Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://fzliangfrank.github.io/networkUtils/dev/ROADMAP.html","id":null,"dir":"","previous_headings":"","what":"{networkUtils} roadmap","title":"{networkUtils} roadmap","text":"outline necessary features making application complete.","code":""},{"path":"https://fzliangfrank.github.io/networkUtils/dev/ROADMAP.html","id":"reduce-dependency","dir":"","previous_headings":"","what":"Reduce Dependency","title":"{networkUtils} roadmap","text":"package used lot function visNetwork. full implementation visNetwork package build vis.js javascript library. ‘future’ want depend javascript library customization editing. web technology evolve, package explore. example networkD3 package.","code":""},{"path":"https://fzliangfrank.github.io/networkUtils/dev/ROADMAP.html","id":"graph-attribute-editing-ui","dir":"","previous_headings":"","what":"Graph Attribute Editing UI","title":"{networkUtils} roadmap","text":"lot thought . ideal UI design selecting node editing can exists side side. perhaps visualize node edge table easy bulk editing. actually much better facilitated download excel sheet borrow excels powerful search formula engine.","code":""},{"path":"https://fzliangfrank.github.io/networkUtils/dev/ROADMAP.html","id":"version-control","dir":"","previous_headings":"","what":"Version Control","title":"{networkUtils} roadmap","text":"Graph changes captured $editing element output mod_visNet_server. output can rendered UI via log_timeline_item. can capture reactive value map . Change captured per command. rough approx capture change better way may capture change every 1 minutes. additional logic revert graph change can even complicated.","code":""},{"path":"https://fzliangfrank.github.io/networkUtils/dev/ROADMAP.html","id":"multi-user-support","dir":"","previous_headings":"","what":"Multi User support","title":"{networkUtils} roadmap","text":"possible without back end database. change complicated github manage changes. changes overlapping one another difficult track . Unless can disable certain node editing. instance, user press editing button, application ask area want editing, set request back database lock selected area (reserve area). next user able edit area. put lot font-end development stress think, better put javascript rather R- backend. store position, view nodes network. server fetch new data, simply ask R - server re-render visNetwork_html output, layout also re-render. Consequently user lose track node working . ultimately frustrating. example just demonstrate much server work load required unique experience.","code":""},{"path":"https://fzliangfrank.github.io/networkUtils/dev/ROADMAP.html","id":"syntax-simplicity","dir":"","previous_headings":"","what":"Syntax simplicity","title":"{networkUtils} roadmap","text":"come across Ian Kloo’s’s sigmaNet recently really liked implemented shiny server. duo, mod_visNetInteractive_server, mod_visNetModification_server worldly. Use conjunction weird way stack together (temporarily wrote mod_visNet_server convention two). want able potentially pipe two. Use tidy syntax : pseudocode alert visNetServer take responsibility rendering visNetworkOutput. perhaps, responsible resale network large nodes able send request.","code":"...<ui logic>.... ... ...<server logic> .. observe({}) ... visNetServer('id') |>    # replace modification server   addModificationListener() |>    # replace interactive server   addInteractionListener() |>    # new feature for hooking into database   addWebHook()"},{"path":"https://fzliangfrank.github.io/networkUtils/dev/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Fanzhou Liang. Maintainer, author.","code":""},{"path":"https://fzliangfrank.github.io/networkUtils/dev/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Liang F (2023). networkUtils: Interactive Extension VisNetwork. https://github.com/FzliangFrank/networkUtils, https://fzliangfrank.github.io/networkUtils/.","code":"@Manual{,   title = {networkUtils: Interactive Extension for VisNetwork},   author = {Fanzhou Liang},   year = {2023},   note = {https://github.com/FzliangFrank/networkUtils, https://fzliangfrank.github.io/networkUtils/}, }"},{"path":"https://fzliangfrank.github.io/networkUtils/dev/index.html","id":"networkutils-","dir":"","previous_headings":"","what":"Interactive Extension for VisNetwork","title":"Interactive Extension for VisNetwork","text":"Editing interact network data always easy. package envelope bundle shiny modules editing interact small amount graph data, let download load back excel spreadsheet. package intended R developers already familiar basic workflow shiny shiny module. already familiar shiny module , skim Hadley Wickham’s Mastering Shiny. three pairs pre-written shiny module R package help build interactive graph-based shiny application quickly. : mod_visNetModification_<ui/server> visualize, main graph editing. mod_visNetInteraction_<ui/server> interactively select data mod_fileUploader_<ui/server> ingesting node/edge list addition mod_visNet_server, serverside short-cut use mod_visNetModification_server mod_visNetInteraction_server time. development heavy depends visNetwork package works responsive graph 500 nodes.","code":""},{"path":"https://fzliangfrank.github.io/networkUtils/dev/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Interactive Extension for VisNetwork","text":"can install development version networkUtils GitHub :","code":"remotes::install_github(\"FzliangFrank/networkUtils\")"},{"path":"https://fzliangfrank.github.io/networkUtils/dev/index.html","id":"quick-run","dir":"","previous_headings":"","what":"Quick Run","title":"Interactive Extension for VisNetwork","text":"also hosted shiny.io","code":"library(networkUtils) run_simpleNetworkUtilApp()"},{"path":"https://fzliangfrank.github.io/networkUtils/dev/index.html","id":"introduction","dir":"","previous_headings":"","what":"Introduction","title":"Interactive Extension for VisNetwork","text":"Network/Graph data structured usually edge list adjacency matrix. data formats easy human interact editing. modules written package let human interactively search editing network based data interactively. extend interactivity popular javascript library {vis.js} data-storm’s {visNetwork} make easily accessible R-user. networkUtil packages. make selecting node edge based attributes using mod_visInteractive_ui() mod_visInteractive_server  editing graph structure using mod_visModification_ui() mod_visModification_server()  file upload download server using mod_fileUploader_ui() mod_fileUploader_server().","code":""},{"path":"https://fzliangfrank.github.io/networkUtils/dev/index.html","id":"geting-started","dir":"","previous_headings":"Introduction","what":"Geting Started","title":"Interactive Extension for VisNetwork","text":"need two shiny module made possible: mod_visNetModification_server(id) (ui) charge logic editing networkgraph. function return reactive graph. mod_visNetInteraction_server(id) (ui) charge dynamic UI selection node. Make sure id matches. can build shinyApp using two module. Note always pass igraph reacitve expression. output mod_visNetModification_server always list two: $Current graph interacting now $Main graph happy (one press save) basic version control.","code":"library(shiny) library(igraph) ui <- fluidPage(   column(4,          # must-have ui for interactive control bar          mod_visNetInteraction_ui(\"id\")          ),   column(8,           # must-have ui for main graph          mod_visNetModification_ui(\"id\")          )   )  server <- function(input, output, session) {   myGraph = reactive({     # fake a graph      n = 20     b = 3     g <- igraph::make_tree(n, b, mode = \"out\")     # fake some attributes     nV <- length(V(g))     nE <- length(E(g))     V(g)$label <- sample(letters, nV, replace = T) # fix this latter NAME needs to not identical     V(g)$attr1_int <- sample(seq(10), nV, replace = T)     V(g)$attr2_letter <- sample(LETTERS, nV, replace = T)     V(g)$attr3_numb <- runif(nV) * 100     sp_df = data.frame(x = runif(nV), y= runif(nV)) |> sf::st_as_sf(coords=c('x', 'y'))     V(g)$attr4_geom <- sp_df$geom     E(g)$attr1 <- runif(nE) * 100   })   # hello world   mod_visNet_server(\"id\",                       myGraph,                      hard_delete = F                      ) # Output is reactive value } shinyApp(ui, server)"},{"path":"https://fzliangfrank.github.io/networkUtils/dev/index.html","id":"customise-how-you-want-editing-graph","dir":"","previous_headings":"Introduction","what":"Customise how you want editing graph.","title":"Interactive Extension for VisNetwork","text":"visNetwork_graphChange generates massive list command changed. function transfrom command generated visNetwork api modified graph. database set can use function export changes graph back database. modify_graph_i example Detail list work. Go visit visNetwork documentation. function currently accept one command time.","code":"list_of_command = list(   cmd = 'addNode',   id = '31' ) modify_graph_i(graph, list_of_command)"},{"path":"https://fzliangfrank.github.io/networkUtils/dev/index.html","id":"siny-app-build-using-this-module","dir":"","previous_headings":"Introduction","what":"Siny App Build Using this Module","title":"Interactive Extension for VisNetwork","text":"Simple Network Util App avaiable shiny.io","code":"library(networkUtils) run_simpleNetworkUtilApp()"},{"path":"https://fzliangfrank.github.io/networkUtils/dev/reference/fileUploader.html","id":null,"dir":"Reference","previous_headings":"","what":"fileUploader UI Function — fileUploader","title":"fileUploader UI Function — fileUploader","text":"shiny Module.","code":""},{"path":"https://fzliangfrank.github.io/networkUtils/dev/reference/fileUploader.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"fileUploader UI Function — fileUploader","text":"","code":"mod_fileUploader_ui(id, label = \"Upload a File\", ...)  mod_fileUploader_server(id)"},{"path":"https://fzliangfrank.github.io/networkUtils/dev/reference/fileUploader.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"fileUploader UI Function — fileUploader","text":"id Internal parameters shiny. label message show upload file ... argument `shiny::fileInput`","code":""},{"path":"https://fzliangfrank.github.io/networkUtils/dev/reference/fileUploader.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"fileUploader UI Function — fileUploader","text":"bs4Dash UI reactive igraph object","code":""},{"path":"https://fzliangfrank.github.io/networkUtils/dev/reference/interaction.html","id":null,"dir":"Reference","previous_headings":"","what":"visNetInteraction — interaction","title":"visNetInteraction — interaction","text":"shiny Module. module let interact graph Require visnetwork rendered shiny base id `visNetworkId`","code":""},{"path":"https://fzliangfrank.github.io/networkUtils/dev/reference/interaction.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"visNetInteraction — interaction","text":"","code":"mod_visNetInteraction_ui(id)  mod_visNetInteraction_server(   id,   igraph_rct,   e_ignore = c(),   v_ignore = c(),   show_hidden = F,   domain = getDefaultReactiveDomain() )"},{"path":"https://fzliangfrank.github.io/networkUtils/dev/reference/interaction.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"visNetInteraction — interaction","text":"id id igraph_rct reactive expression igraph e_ignore, v_ignore vector node/edge attributes. tells interactive UI stop parsing specific attribute searchable UI. show_hidden used conjunction `e_ignore` `v_ignore`. attribute begain/'.' flag show set TRUE. useful attributes created tidygraph (`.tidygraph_e_index`) create color attributes visNetwork (`color.border`) domain session nesting module","code":""},{"path":"https://fzliangfrank.github.io/networkUtils/dev/reference/log_timeline_item.html","id":null,"dir":"Reference","previous_headings":"","what":"log_timeline_item — log_timeline_item","title":"log_timeline_item — log_timeline_item","text":"convenient function help render single bs4Dash::timeline_item. Useful visualise version change graph modified.","code":""},{"path":"https://fzliangfrank.github.io/networkUtils/dev/reference/log_timeline_item.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"log_timeline_item — log_timeline_item","text":"","code":"log_timeline_item(chglog_1)"},{"path":"https://fzliangfrank.github.io/networkUtils/dev/reference/log_timeline_item.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"log_timeline_item — log_timeline_item","text":"chglog_1 list two item change item","code":""},{"path":"https://fzliangfrank.github.io/networkUtils/dev/reference/log_timeline_item.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"log_timeline_item — log_timeline_item","text":"timeline_item UI component","code":""},{"path":"https://fzliangfrank.github.io/networkUtils/dev/reference/log_timeline_item.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"log_timeline_item — log_timeline_item","text":"","code":"graph_chg_log = list(   time = '2021-01-05',   change = list(     cmd = 'addEdge',     from= 1,     to = 2   ) ) log_timeline_item(graph_chg_log) #> <div> #>   <i class=\"fas fa-ruler bg-info\" role=\"presentation\" aria-label=\"ruler icon\"><\/i> #>   <div class=\"timeline-item\"> #>     <span class=\"time\"> #>       <i class=\"far fa-clock\" role=\"presentation\" aria-label=\"clock icon\"><\/i> #>       2021-01-05 #>     <\/span> #>     <h3 class=\"timeline-header\">add edge<\/h3> #>     <div class=\"timeline-body\"> #>       <p> #>         add edge from: #>         1 #>         to #>         2 #>       <\/p> #>     <\/div> #>     <div class=\"timeline-footer\"><\/div> #>   <\/div> #> <\/div>  if(interactive()) {   library(shiny)   library(visNetwork)   library(igraph)   library(bs4Dash)   devtools::load_all()    ccl = make_ring(10, T)   log_timeline_item = function(chglog_1) {     if(chglog_1 |> is.null()) return(NULL)     chglog_1$change -> x     chglog_1$time -> time     content = jsonlite::toJSON(x, auto_unbox = T, simplifyMatrix = T) |>       jsonlite::prettify()      if(is.null(x) || is.na(x) || length(x) == 0) {       return(timelineStart())     } else if(x$cmd == 'addNode') {       icon = icon(\"circle-plus\")       title = \"add node\"       color = 'success'     } else if (x$cmd == 'addEdge') {       icon = icon('ruler')       title = \"add edge\"       color = 'info'       content = p('add edge from:', x$from, 'to', x$to)     } else if (x$cmd == 'deleteElements') {       icon = icon(\"trash\")       title = sprintf(\"deleted %i element\", length(x$nodes) + length(x$edges))       color = 'maroon'     } else if (x$cmd == 'editEdge') {       icon = icon(\"pencil\")       color = 'indigo'       title = \"edge edited\"       content = paste(x$from, '-->',x$to)     } else {       stop(\"unrecognised command\")     }     timelineItem(       icon = icon,       time = time,       title = title,       color = color,       content     )   }   # basic UI   # dashboard UI   ui <- bs4Dash::dashboardPage(     header = dashboardHeader(       title = 'Graph Change Tracker',       tags$head(         tags$script('window.onresize = function() {network.fit();}')       )     ),     sidebar = dashboardSidebar(),     controlbar = dashboardControlbar(       controlbarMenu(         type = 'hidden',         controlbarItem(           title = 'Find Node',           icon = icon('magnifying-glass-arrow-right'),           mod_visNetInteraction_ui('visNet'),         )       ),       width = 300     ),     body = dashboardBody(       fluidRow(         sortable(           width = 6,           box(             width = 12,             style = 'overflow-y: scroll;',             title = 'Network',             maximizable = T,             height = 200,             mod_visNetModification_ui('visNet')           ),         ),         sortable(           width = 6,           box(             width = 12,             title = 'Time Line',             div(               style = 'overflow: scroll',               height = '300px',               uiOutput(\"timeline_ui\")             )           )         )       ),       box(         title = \"Dev Log\",         verbatimTextOutput('dev')       )     )   )    server <- function(input, output, session) {     graph = reactive(ccl)     G = mod_visNet_server('visNet', graph)     clicked_node = reactive({       G$click_node     })     change_log = reactiveValues(log=NULL)     # create a series of change logs based on whenever a     # change happens.     observe({       req(G$editing)       req(!is.null(G$editing$cmd) || is.na(G$editing))       change_log$log = isolate(change_log$log) |>         append(list(list(           time = Sys.time(),           change = G$editing         )))     })     output$dev <- renderPrint({       print(clicked_node())       print(change_log$log)       print(change_log$log |>               jsonlite::toJSON(auto_unbox = T, simplifyMatrix = T) |>               jsonlite::prettify())     })     output$save = downloadHandler(       filename = function() {         paste(Sys.time(), '.json')       },       content = function(file) {         change_log$log |>           jsonlite::toJSON() |>           jsonlite::write_json(file)       }     )     output$timeline_ui <- renderUI({       timelineBlock(         width = 12,         purrr::map(           change_log$log,           log_timeline_item         )       )     })   }   shinyApp(ui, server) }"},{"path":"https://fzliangfrank.github.io/networkUtils/dev/reference/mod_visNet_.html","id":null,"dir":"Reference","previous_headings":"","what":"visNet Server Functions — mod_visNet_","title":"visNet Server Functions — mod_visNet_","text":"easiest way use modification server interaction server. mod_visNet_server links modification interaction UI make easy","code":""},{"path":"https://fzliangfrank.github.io/networkUtils/dev/reference/mod_visNet_.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"visNet Server Functions — mod_visNet_","text":"","code":"mod_visNet_server(   id,   graph_rct,   debug = F,   visNet_options = NULL,   layout = NULL,   NodeAttrTooltip = F,   EdgeAttrTooltip = F )"},{"path":"https://fzliangfrank.github.io/networkUtils/dev/reference/mod_visNet_.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"visNet Server Functions — mod_visNet_","text":"id Internal parameters shiny. graph_rct reactive expression igraph debug flag create text output tracking change. visNet_options list option passed `visSetOptions` also reactive layout igraph layout put `visNetwork::visIgraphLayout` static reactive. NodeAttrTooltip, EdgeAttrTooltip two flag set ture attributes automatically parsed tooltips, following formula 'attrName: attr'. good parsing time series type.","code":""},{"path":"https://fzliangfrank.github.io/networkUtils/dev/reference/mod_visNet_.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"visNet Server Functions — mod_visNet_","text":"reactive list","code":""},{"path":"https://fzliangfrank.github.io/networkUtils/dev/reference/mod_visNet_.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"visNet Server Functions — mod_visNet_","text":"list `Current`, `Main` `click_node` `click_edge` `Main` graph committed editing; `Current` graph display; Two additional `click_node` `click_edge` let track edges node currently clicked","code":""},{"path":"https://fzliangfrank.github.io/networkUtils/dev/reference/modify_graph_i.html","id":null,"dir":"Reference","previous_headings":"","what":"modify_graph — modify_graph_i","title":"modify_graph — modify_graph_i","text":"Modify graph single command line","code":""},{"path":"https://fzliangfrank.github.io/networkUtils/dev/reference/modify_graph_i.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"modify_graph — modify_graph_i","text":"","code":"modify_graph_i(   igraphObj,   visNetwork_graphChange,   sideEffect = NULL,   hard_delete = T )"},{"path":"https://fzliangfrank.github.io/networkUtils/dev/reference/modify_graph_i.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"modify_graph — modify_graph_i","text":"igraphObj object inherit igraph visNetwork_graphChange single list command result visnetwork_graphChange, explained package list always following element: - *addNode* - *addEdge* - *editEdge* - *deleteElements* ever need side effect, possible add function every time make change, add new attribute node edge. (example time stamp) can trick changed . sideEffect namespace meant written function trigger side effect different cmd type hard_delete set false element deleted added attribute `.deleted_at` instead.","code":""},{"path":"https://fzliangfrank.github.io/networkUtils/dev/reference/modify_graph_i.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"modify_graph — modify_graph_i","text":"igraph object changed","code":""},{"path":"https://fzliangfrank.github.io/networkUtils/dev/reference/networkUtilApp.html","id":null,"dir":"Reference","previous_headings":"","what":"networkUtilApp — networkUtilApp","title":"networkUtilApp — networkUtilApp","text":"Explore graph explort","code":""},{"path":"https://fzliangfrank.github.io/networkUtils/dev/reference/networkUtilApp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"networkUtilApp — networkUtilApp","text":"","code":"networkUtilApp(graph)"},{"path":"https://fzliangfrank.github.io/networkUtils/dev/reference/networkUtilApp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"networkUtilApp — networkUtilApp","text":"graph igraph tbl_graph object; prefer node edge notation call `igraph::graph_from_data_frame` convert node edge sheet","code":""},{"path":"https://fzliangfrank.github.io/networkUtils/dev/reference/networkUtilApp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"networkUtilApp — networkUtilApp","text":"shiny session quickly call whatever graph put graph","code":""},{"path":"https://fzliangfrank.github.io/networkUtils/dev/reference/networkUtils-package.html","id":null,"dir":"Reference","previous_headings":"","what":"networkUtils: Interactive Extension for VisNetwork — networkUtils-package","title":"networkUtils: Interactive Extension for VisNetwork — networkUtils-package","text":"Shiny extension Almende B.V. 's package `visNetwork.`networkUtils let modify networkgraph downloadnode edge sheets. returned igraph object can used purpose.","code":""},{"path":[]},{"path":"https://fzliangfrank.github.io/networkUtils/dev/reference/networkUtils-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"networkUtils: Interactive Extension for VisNetwork — networkUtils-package","text":"Maintainer: Fanzhou Liang fzlianguk@gmail.com","code":""},{"path":"https://fzliangfrank.github.io/networkUtils/dev/reference/pasteDetails.html","id":null,"dir":"Reference","previous_headings":"","what":"pasteDetails — pasteDetails","title":"pasteDetails — pasteDetails","text":"paste list vector (length) together. can use function write html paragraph simple just one row Use-full graph node edge attributes.","code":""},{"path":"https://fzliangfrank.github.io/networkUtils/dev/reference/pasteDetails.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"pasteDetails — pasteDetails","text":"","code":"pasteDetails(   namedList,   include,   sep.attr = \"<br>\",   sep.label = \":\",   show_hidden = F )  pasteNodeDetails(g, include, ...)  pasteEdgeDetails(g, include, ...)"},{"path":"https://fzliangfrank.github.io/networkUtils/dev/reference/pasteDetails.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"pasteDetails — pasteDetails","text":"namedList named r list include vector names much want include sep.attr typically line breaks attribute sep.label speperator attribute name attributes show_hidden attributes begain '.' pasted . g igraph object specifically used graph objects ... argument put pasteDetails","code":""},{"path":"https://fzliangfrank.github.io/networkUtils/dev/reference/pasteDetails.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"pasteDetails — pasteDetails","text":"return value, , executing function.","code":""},{"path":"https://fzliangfrank.github.io/networkUtils/dev/reference/pasteDetails.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"pasteDetails — pasteDetails","text":"Paste attributes rectangular tools exclusivedly works pasting","code":""},{"path":"https://fzliangfrank.github.io/networkUtils/dev/reference/pasteDetails.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"pasteDetails — pasteDetails","text":"","code":"# example code  # paste normal object nL = list(  id = 1,   object = \"Apple\",   category = \"Fruit\",   size = 24.22 ) x_html = pasteDetails(nL) x_paste = pasteDetails(nL, sep.attr = \"\\n\") cat(x_paste) #> id : 1 #> object : Apple #> category : Fruit #> size : 24.22"},{"path":"https://fzliangfrank.github.io/networkUtils/dev/reference/run_app.html","id":null,"dir":"Reference","previous_headings":"","what":"Run the Shiny Application — run_app","title":"Run the Shiny Application — run_app","text":"Run Shiny Application","code":""},{"path":"https://fzliangfrank.github.io/networkUtils/dev/reference/run_app.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run the Shiny Application — run_app","text":"","code":"run_app(   onStart = NULL,   options = list(),   enableBookmarking = NULL,   uiPattern = \"/\",   ... )"},{"path":"https://fzliangfrank.github.io/networkUtils/dev/reference/run_app.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run the Shiny Application — run_app","text":"onStart function called app actually run. needed shinyAppObj, since shinyAppDir case, global.R file can used purpose. options Named options passed runApp call (can following: \"port\", \"launch.browser\", \"host\", \"quiet\", \"display.mode\" \"test.mode\"). can also specify width height parameters provide hint embedding environment ideal height/width app. enableBookmarking Can one \"url\", \"server\", \"disable\". default value, NULL, respect setting previous calls  enableBookmarking(). See enableBookmarking() information bookmarking app. uiPattern regular expression applied GET request determine whether ui used handle request. Note entire request path must match regular expression order match considered successful. ... arguments pass golem_opts. See `?golem::get_golem_options` details.","code":""},{"path":"https://fzliangfrank.github.io/networkUtils/dev/reference/run_simpleNetworkUtilApp.html","id":null,"dir":"Reference","previous_headings":"","what":"Run the Shiny Application — run_simpleNetworkUtilApp","title":"Run the Shiny Application — run_simpleNetworkUtilApp","text":"Run Shiny Application","code":""},{"path":"https://fzliangfrank.github.io/networkUtils/dev/reference/run_simpleNetworkUtilApp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run the Shiny Application — run_simpleNetworkUtilApp","text":"","code":"run_simpleNetworkUtilApp(   onStart = NULL,   options = list(),   enableBookmarking = NULL,   uiPattern = \"/\",   ... )"},{"path":"https://fzliangfrank.github.io/networkUtils/dev/reference/run_simpleNetworkUtilApp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run the Shiny Application — run_simpleNetworkUtilApp","text":"onStart function called app actually run. needed shinyAppObj, since shinyAppDir case, global.R file can used purpose. options Named options passed runApp call (can following: \"port\", \"launch.browser\", \"host\", \"quiet\", \"display.mode\" \"test.mode\"). can also specify width height parameters provide hint embedding environment ideal height/width app. enableBookmarking Can one \"url\", \"server\", \"disable\". default value, NULL, respect setting previous calls  enableBookmarking(). See enableBookmarking() information bookmarking app. uiPattern regular expression applied GET request determine whether ui used handle request. Note entire request path must match regular expression order match considered successful. ... arguments pass golem_opts. See `?golem::get_golem_options` details.","code":""},{"path":"https://fzliangfrank.github.io/networkUtils/dev/reference/search_idx.html","id":null,"dir":"Reference","previous_headings":"","what":"Search index — search_idx","title":"Search index — search_idx","text":"utils function","code":""},{"path":"https://fzliangfrank.github.io/networkUtils/dev/reference/search_idx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search index — search_idx","text":"","code":"search_idx(g, expr_txt, as_ids = F, search_in = \"nodes\")"},{"path":"https://fzliangfrank.github.io/networkUtils/dev/reference/search_idx.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search index — search_idx","text":"g igraph object expr_txt string expression names node search as_ids T return index search_in dip argument set edge can search edges","code":""},{"path":"https://fzliangfrank.github.io/networkUtils/dev/reference/search_idx.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search index — search_idx","text":"vector","code":""},{"path":"https://fzliangfrank.github.io/networkUtils/dev/reference/search_idx.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search index — search_idx","text":"","code":"set.seed(1) g = make_tree(12, 3) V(g)$attr <- sample(letters, length(g)) V(g)$name <- paste0(seq(length(g)), \".\", V(g)$attr) search_idx(g, \"attr == 'v'\") #> + 0/0 vertices, named, from e65416c: search_idx(g, '9.w') #> + 1/1 vertex, named, from 4b94a9d: #> [1] 9.w # if tidygraph is loaded in environment this will work library(tidygraph) #>  #> Attaching package: ‘tidygraph’ #> The following object is masked from ‘package:igraph’: #>  #>     groups #> The following object is masked from ‘package:stats’: #>  #>     filter search_idx(g, 'node_is_root()') #> + 1/1 vertex, named, from ddef540: #> [1] 1.y"},{"path":"https://fzliangfrank.github.io/networkUtils/dev/reference/simpleNetworkUtilApp_server.html","id":null,"dir":"Reference","previous_headings":"","what":"The application server-side — simpleNetworkUtilApp_server","title":"The application server-side — simpleNetworkUtilApp_server","text":"application server-side","code":""},{"path":"https://fzliangfrank.github.io/networkUtils/dev/reference/simpleNetworkUtilApp_server.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The application server-side — simpleNetworkUtilApp_server","text":"","code":"simpleNetworkUtilApp_server(input, output, session)"},{"path":"https://fzliangfrank.github.io/networkUtils/dev/reference/simpleNetworkUtilApp_server.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The application server-side — simpleNetworkUtilApp_server","text":"input, output, session Internal parameters shiny. REMOVE.","code":""},{"path":"https://fzliangfrank.github.io/networkUtils/dev/reference/visNetModification.html","id":null,"dir":"Reference","previous_headings":"","what":"visNetworkWrite UI Function — visNetModification","title":"visNetworkWrite UI Function — visNetModification","text":"shiny Module.","code":""},{"path":"https://fzliangfrank.github.io/networkUtils/dev/reference/visNetModification.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"visNetworkWrite UI Function — visNetModification","text":"","code":"mod_visNetModification_ui(id)  mod_visNetModification_server(   id,   igraphObj,   dev = F,   hard_delete = T,   NodeAttrTooltip = T,   EdgeAttrTooltip = T,   domain = getDefaultReactiveDomain(),   visNet_options = NULL,   layout = \"layout_nicely\" )"},{"path":"https://fzliangfrank.github.io/networkUtils/dev/reference/visNetModification.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"visNetworkWrite UI Function — visNetModification","text":"id shiny server id igraphObj reactive graph object dev open printer hard_delete flag turn , edge can actually deleted/ NodeAttrTooltip, EdgeAttrTooltip two flag set ture attributes automatically parsed tooltips, following formula 'attrName: attr'. good parsing time series type. domain session visNet_options list option passed `visSetOptions` layout igraph layout put `visNetwork::visIgraphLayout`","code":""},{"path":"https://fzliangfrank.github.io/networkUtils/dev/reference/visNetModification.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"visNetworkWrite UI Function — visNetModification","text":"reactiveValues $Curent $Main ","code":""},{"path":"https://fzliangfrank.github.io/networkUtils/dev/reference/visNetModification.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"visNetworkWrite UI Function — visNetModification","text":"$Current reactive igraph Object every modified now $Main igraph Object committed saved addition return set `reactiveValues` monitor graph changes track node currently clicked.","code":""}]
